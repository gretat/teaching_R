# or we can change more than one variable based on the same rule
employment_mutate_at <- employment_mutate_cases %>%
mutate_at(vars('Carrots_eaten', 'Value'),  sqrt )
# we can also do conditional filtering and mutations
# say you want to  only look at the ones
employment_filter_if <- employment_mutate_cases %>%
filter_if(is.numeric,   any_vars( . <= 3000)) #we only want to keep those instances that have a value greater than 3000 in all numeric columns
View(employment_filter_if)
# we can also do conditional filtering and mutations
# say you want to  only look at the ones
employment_filter_if <- employment_mutate_cases %>%
filter_if(is.numeric,   all_vars( . <= 3000)) #we only want to keep those instances that have a value greater than 3000 in all numeric columns
# we can also do conditional filtering and mutations
# say you want to  only look at the ones
employment_filter_if <- employment_mutate_cases %>%
filter_if(is.numeric,   all_vars( . < 3000)) #we only want to keep those instances that have a value greater than 3000 in all numeric columns
View(employment_filter_if)
View(employment_clean)
# we can also do conditional filtering and mutations
# say you want to  only look at the ones
employment_filter_if <- employment_mutate_cases %>%
filter_if(is.numeric,   all_vars( . < 6000)) #we only want to keep those instances that have a value greater than 3000 in all numeric columns
View(employment)
View(employment_separate)
employment_clean <- employment %>% #use employment data THEN
select(-FeatureCode) %>%  #remove FeaureCode THEN
filter(Measurement == 'Count') %>% #keep only the number ofpeople THEN
select(-c(Units, Measurement)) #remove unnecessary column
employment_separate <- employment_clean %>%
separate(DateCode, c('Year', 'Quarter'), sep="-")
View(employment_separate)
employment_united <- employment_separate %>%
unite(DateCode, c('Year', 'Quarter'), sep="-")
employments_mutate <- employment_separate %>%
mutate(numbered_gender = ifelse(Gender == 'Male', 1, ifelse(Gender == 'Female', 2, 0)))
# or when we wnat to have several different conditions and we do not want to write many ifelse's
employment_mutate_cases <- employments_mutate %>%
mutate(Carrots_eaten = case_when(married_percentage <= 60 ~ 40, married_percentage > 60 & Value<= 4000 ~ 3450, Value > 4000 ~ 6000))  # I have created a random carrots eating variable for illustration purposes
# or we can change more than one variable based on the same rule
employment_mutate_at <- employment_mutate_cases %>%
mutate_at(vars('Carrots_eaten', 'Value'),  sqrt )
employment_females <- employment_mutate_cases %>%
filter(Gender %in% c('Male', 'Female')) # or put ! before Gender to get everything that is not Male or Female
employment_filter_at <- employment_mutate_cases %>%
filter_at(vars('Carrots_eaten', 'Value'),  ~ . >2000 )
# we can also do conditional filtering and mutations
# say you want to  only look at the ones
employment_filter_if <- employment_mutate_cases %>%
filter_if(is.numeric,   all_vars( . < 6000)) #we only want to keep those instances that have a value smaller than 6000 in all numeric columns
#sometimes you want to know how much
employment_filter_all <- employment_mutate_cases %>%
filter_all()
View(employment_mutate_cases)
unique(employment_mutate_cases$Gender)
#sometimes you want to know how much
employment_filter_all <- employment_mutate_cases %>%
mutate(Royalty = case_when(Gender == 'Female' ~ 'Queen', Gender == 'Male' ~ 'King', Gender == 'All' ~ 'Royal')) %>%
filter_all(any_vars(grepl('Q', .)))
View(employment_filter_at)
View(employment_filter_all)
#sometimes you want to know how much
employment_filter_all <- employment_mutate_cases %>%
mutate(Royalty = case_when(Gender == 'Female' ~ 'Queen', Gender == 'Male' ~ 'King', Gender == 'All' ~ 'Royal')) %>%
filter_all(any_vars(grepl(pattern ='Q', ., fixed = T)))
#sometimes you want to know how much
employment_filter_all <- employment_mutate_cases %>%
mutate(Royalty = case_when(Gender == 'Female' ~ 'Queen', Gender == 'Male' ~ 'King', Gender == 'All' ~ 'Royal')) %>%
filter_all(all_vars(grepl(pattern ='Q', ., fixed = T)))
#sometimes you want to know how much
employment_filter_all <- employment_mutate_cases %>%
mutate(Royalty = case_when(Gender == 'Female' ~ 'Q1', Gender == 'Male' ~ 'K1', Gender == 'All' ~ 'R1')) %>%
filter_all(any_vars(grepl(pattern ='Q1', ., fixed = T)))
View(employment_filter_all)
#sometimes you want to know how much
employment_filter_all <- employment_mutate_cases %>%
mutate(Royalty = case_when(Gender == 'Female' ~ 'Q1', Gender == 'Male' ~ 'K1', Gender == 'All' ~ 'R1')) %>%
filter_all(any_vars(grepl(pattern ='Q1', ., fixed = TRUE)))
genders <- c('Male', 'Female', 'Non-binary', 'Transgender', 'Other')
grep('male', genders, fixed = T)
grep('male', genders, fixed = T)
genders <- c('male', 'female', 'non-binary', 'transgender', 'other')
grep('male', genders, fixed = T)
ind<- grep('male', genders, fixed = T)
gender_cat <- genders[ind]
employment_females <- employment_mutate_cases %>%
filter(to_lower(Gender) %in% gender_cat)
employment_females <- employment_mutate_cases %>%
filter(tolower(Gender) %in% gender_cat)
View(employment_females)
grepl('male', genders, fixed= T)
genders[grepl('male', genders, fixed= T)]
employment1<- employment[1:400,]
employment2 <- employment[600 :1000,]
employment_rbind <- rbind(emplyment1, employment2)
employment1<- employment[1:400,]
employment2 <- employment[600 :1000,]
employment_rbind <- rbind(emplyment1, employment2)
employment_rbind <- rbind(employment1, employment2)
employment2 <- employment[600 :1200,]
cbind(mployment1, employment2)
cbind(employment1, employment2)
cbind(employment1, employment2[1:400,])
View(employment_clean)
unique(employment_mutate_cases$married_percentage)
desc(unique(employment_mutate_cases$married_percentage))
asc(unique(employment_mutate_cases$married_percentage))
sort(unique(employment_mutate_cases$married_percentage))
to_join <- tibble(married_percentage = sort(unique(employment_mutate_cases$married_percentage)), rate_average = rep(c('bellow', 'above'), times = 2))
#join using
joined_tables <- inner_join(employment_mutate_cases, to_join, by = c('Industry Sector (SIC 07)' = 'SIC'))
to_join <- tibble(married_perc = sort(unique(employment_mutate_cases$married_percentage)), rate_average = rep(c('bellow', 'above'), times = 2))
#join using
joined_tables <- inner_join(employment_mutate_cases, to_join, by = c('married_perc' = 'married_percentage'))
#join using
joined_tables <- inner_join(employment_mutate_cases, to_join, by = c('married_percentage' = 'married_perc'))
View(joined_tables)
View(to_join)
to_join <- tibble(married_perc = sort(unique(employment_mutate_cases$married_percentage)), rate_average = rep(c('bellow', 'above'), each = 2))
#join using
joined_tables <- inner_join(employment_mutate_cases, to_join, by = c('married_percentage' = 'married_perc'))
employment_plot <- employment_mutate_cases %>%
filter(Gender %in% gender_cat)
View(employment_plot)
employment_plot <- employment_mutate_cases %>%
filter(tolower(Gender) %in% gender_cat)
ggplot(employment_plot, aes(x = Value, y = quarter, group = Gender, clour = Gender)) +
geom_line()
ggplot(employment_plot, aes(x = Value, y = Year, group = Gender, clour = Gender)) +
geom_line()
source('D:/Githug/TeachingR/teaching_R/R for refreshers and extension/R for refresher and extension.R', echo=TRUE)
employment_plot <- employment_mutate_cases %>%
filter(tolower(Gender) %in% gender_cat) %>%
group_by(Year, Gender, `Working Pattern`) %>%
summarise_if(is.numeric, sum) %>%
ungroup()
employment_plot <- employment_mutate_cases %>%
filter(tolower(Gender) %in% gender_cat) %>%
group_by(Year, Gender, `Working Pattern`) %>%
summarise_if(is.numeric, sum) %>%
ungroup() %>%
mutate(married_percentage = mmarried_percentage/16)
employment_plot <- employment_mutate_cases %>%
filter(tolower(Gender) %in% gender_cat) %>%
group_by(Year, Gender, `Working Pattern`) %>%
summarise_if(is.numeric, sum) %>%
ungroup() %>%
mutate(married_percentage = married_percentage/16)
employment_plot <- employment_mutate_cases %>%
filter(tolower(Gender) %in% gender_cat) %>%
group_by(Year, Gender, `Working Pattern`) %>%
summarise(Value = sum(Value),
married_percentage = mean(married_percentage))%>%
ungroup() %>%
select(-numbered_gender)
employment_plot <- employment_mutate_cases %>%
filter(tolower(Gender) %in% gender_cat) %>%
group_by(Year, Gender, `Working Pattern`) %>%
summarise(Value = sum(Value),
married_percentage = mean(married_percentage))%>%
ungroup()
ggplot(employment_plot, aes(x = Value, y = Year, group = Gender, clour = Gender)) +
geom_line()
ggplot(employment_plot, aes(x = Value, y = Year, group = Gender, colour = Gender)) +
geom_line()
ggplot(employment_plot, aes(x = YEar, y = Value, group = Gender, colour = Gender)) +
geom_line()
ggplot(employment_plot, aes(x = Year, y = Value, group = Gender, colour = Gender)) +
geom_line()
ggplot(employment_plot, aes(x = Year, y = Value, group = Working_pattern`, colour = Gender)) +
geom_line()
ggplot(employment_plot, aes(x = Year, y = Value, group = `Working_pattern`, colour = Gender)) +
geom_line()
ggplot(employment_plot, aes(x = Year, y = Value, group = `Working Pattern`, colour = Gender)) +
geom_line()
ggplot(employment_plot, aes(x = Year, y = Value, group = Gender, colour = Gender)) +
geom_line() %>%
facer_grid(.~ `Working Pattern`)
ggplot(employment_plot, aes(x = Year, y = Value, group = Gender, colour = Gender)) +
geom_line() %>%
facet_grid(.~ `Working Pattern`)
ggplot(employment_plot, aes(x = Year, y = Value, group = Gender, colour = Gender)) +
geom_line() %>%
facet_grid(`Working Pattern`~.)
ggplot(employment_plot, aes(x = Year, y = Value, group = Gender, colour = Gender)) +
geom_line() %>%
facet_wrap(`Working Pattern`)
ggplot(employment_plot, aes(x = Year, y = Value, group = `Working Pattern`, colour = `Working Pattern`)) +
geom_line() %>%
facet_grid(.~Gender)
ggplot(employment_plot, aes(x = Year, y = Value, group = `Working Pattern`, colour = `Working Pattern`)) +
geom_line() +
facet_grid(.~Gender)
ggplot(employment_plot, aes(x = Year, y = Value, group = `Working Pattern`, colour = `Working Pattern`)) +
geom_line() +
geom_point() +
facet_grid(.~Gender)
ggplot(employment_plot, aes(x = Year, y = Value, group = `Working Pattern`, colour = `Working Pattern`)) +
geom_line() +
geom_point() +
facet_grid(.~Gender)
ggplot(employment_plot, aes(x = Year, y = Value, group = `Working Pattern`, colour = `Working Pattern`)) +
geom_line() +
geom_point() +
facet_grid(.~Gender) +
theme_bw()
ggplot(employment_plot, aes(x = Year, y = Value, group = `Working Pattern`, colour = `Working Pattern`)) +
geom_line() +
geom_point() +
facet_grid(.~Gender) +
theme_bw() +
theme(x.axis.title = 'Year 2004 - 2019')
ggplot(employment_plot, aes(x = Year, y = Value, group = `Working Pattern`, colour = `Working Pattern`)) +
geom_line() +
geom_point() +
facet_grid(.~Gender) +
theme_bw() +
theme(x.axis.title = element_text('Year 2004 - 2019'))
ggplot(employment_plot, aes(x = Year, y = Value, group = `Working Pattern`, colour = `Working Pattern`)) +
geom_line() +
geom_point() +
facet_grid(.~Gender) +
theme_bw() +
theme(axis.title.x =  = element_text('Year 2004 - 2019'),
legend.position = 'top')
ggplot(employment_plot, aes(x = Year, y = Value, group = `Working Pattern`, colour = `Working Pattern`)) +
geom_line() +
geom_point() +
facet_grid(.~Gender) +
theme_bw() +
theme(axis.title.x = element_text('Year 2004 - 2019'),
legend.position = 'top')
ggplot(employment_plot, aes(x = Year, y = Value, group = `Working Pattern`, colour = `Working Pattern`)) +
geom_line() +
geom_point() +
facet_grid(.~Gender) +
theme_bw() +
theme(axis.title.x = 'Year 2004 - 2019',
legend.position = 'top')
ggplot(employment_plot, aes(x = Year, y = Value, group = `Working Pattern`, colour = `Working Pattern`)) +
geom_line() +
geom_point() +
theme_bw() +
theme(axis.title.x = element_text('Year 2004 - 2019'),
legend.position = 'top') +
facet_grid(.~Gender)
ggplot(employment_plot, aes(x = Year, y = Value, group = `Working Pattern`, colour = `Working Pattern`)) +
geom_line() +
geom_point() +
theme_bw() +
theme(axis.title.x = element_text('Year 2004 - 2019'),
legend.position = 'top') +
facet_grid(.~Gender)
ggplot(employment_plot, aes(x = Year, y = Value, group = `Working Pattern`, colour = `Working Pattern`)) +
geom_line() +
geom_point() +
theme_bw() +
theme(axis.title.x = element_text('Year 2004 - 2019'),
legend.position = 'top') +
facet_grid(Gender~.)
ggplot(employment_plot, aes(x = Year, y = Value, group = `Working Pattern`, colour = `Working Pattern`)) +
geom_line() +
geom_point() +
theme_bw() +
theme(axis.title.x = element_text("Year 2004 - 2019"),
legend.position = 'top') +
facet_grid(Gender~.)
ggplot(employment_plot, aes(x = Year, y = Value, group = `Working Pattern`, colour = `Working Pattern`)) +
geom_line() +
geom_point() +
theme_bw() +
theme(axis.title.x = element_text(title = "Year 2004 - 2019", size = 12),
axis.title.y = element_text("Count"),
legend.position = 'top') +
facet_grid(Gender~.)
ggplot(employment_plot, aes(x = Year, y = Value, group = `Working Pattern`, colour = `Working Pattern`)) +
geom_line() +
geom_point() +
theme_bw() +
theme(axis.title.x = element_text(name = "Year 2004 - 2019", size = 12),
axis.title.y = element_text("Count"),
legend.position = 'top') +
facet_grid(Gender~.)
ggplot(employment_plot, aes(x = Year, y = Value, group = `Working Pattern`, colour = `Working Pattern`)) +
geom_line() +
geom_point() +
theme_bw() +
labs(x = "Year 2004 - 2019", y = "Count") +
theme(axis.title.x = element_text(size = 12, colour = 'magenta'),
axis.title.y = element_text(size = 16, colour = 'blue'),
legend.position = 'top') +
facet_grid(Gender~.)
ggplot(employment_plot, aes(x = as.numeric(Year), y = Value, group = `Working Pattern`, colour = `Working Pattern`)) +
geom_line() +
geom_point() +
theme_bw() +
labs(x = "Year 2004 - 2019", y = "Count") +
theme(axis.title.x = element_text(size = 12, colour = 'magenta'),
axis.title.y = element_text(size = 16, colour = 'blue'),
legend.position = 'top') +
facet_grid(Gender~.)
ggplot(employment_plot, aes(x = as.numeric(Year), y = Value/1000000, group = `Working Pattern`, colour = `Working Pattern`)) +
geom_line() +
geom_point() +
theme_bw() +
labs(x = "Year 2004 - 2019", y = "Count") +
theme(axis.title.x = element_text(size = 12, colour = 'magenta'),
axis.title.y = element_text(size = 16, colour = 'blue'),
legend.position = 'top') +
facet_grid(Gender~.)
ggplot(employment_plot, aes(x = as.numeric(Year), y = Value/1000000, group = `Working Pattern`, colour = `Working Pattern`)) +
geom_line() +
geom_point() +
theme_bw() +
labs(x = "Year 2004 - 2019", y = "Count in Millions") +
theme(axis.title.x = element_text(size = 12, colour = 'magenta'),
axis.title.y = element_text(size = 16, colour = 'blue'),
legend.position = 'top') +
facet_grid(Gender~.)
ggplot(employment_plot, aes(x = as.numeric(Year), y = Value/1000000, group = `Working Pattern`, colour = `Working Pattern`)) +
geom_line() +
geom_point() +
facet_grid(Gender~., labeller = c(Female = 'Women', Male = 'Men'))  +
theme_bw() +
labs(x = "Year 2004 - 2019", y = "Count in Millions") +
theme(axis.title.x = element_text(size = 12, colour = 'magenta'),
axis.title.y = element_text(size = 16, colour = 'blue'),
legend.position = 'top')
ggplot(employment_plot, aes(x = as.numeric(Year), y = Value/1000000, group = `Working Pattern`, colour = `Working Pattern`)) +
geom_line() +
geom_point() +
facet_grid(Gender~., labeller = labeller(Female = 'Women', Male = 'Men')) +
theme_bw() +
labs(x = "Year 2004 - 2019", y = "Count in Millions") +
theme(axis.title.x = element_text(size = 12, colour = 'magenta'),
axis.title.y = element_text(size = 16, colour = 'blue'),
legend.position = 'top')
ggplot(employment_plot, aes(x = as.numeric(Year), y = Value/1000000, group = `Working Pattern`, colour = `Working Pattern`)) +
geom_line() +
geom_point() +
facet_grid(Gender~., labeller = as.labeller(c(Female = 'Women', Male = 'Men'))) +
theme_bw() +
labs(x = "Year 2004 - 2019", y = "Count in Millions") +
theme(axis.title.x = element_text(size = 12, colour = 'magenta'),
axis.title.y = element_text(size = 16, colour = 'blue'),
legend.position = 'top')
ggplot(employment_plot, aes(x = as.numeric(Year), y = Value/1000000, group = `Working Pattern`, colour = `Working Pattern`)) +
geom_line() +
geom_point() +
facet_grid(Gender~., labeller = as_labeller(c(Female = 'Women', Male = 'Men'))) +
theme_bw() +
labs(x = "Year 2004 - 2019", y = "Count in Millions") +
theme(axis.title.x = element_text(size = 12, colour = 'magenta'),
axis.title.y = element_text(size = 16, colour = 'blue'),
legend.position = 'top')
ggplot(employment_plot, aes(x = as.numeric(Year), y = Value/1000000, group = `Working Pattern`, colour = `Working Pattern`)) +
geom_line() +
geom_point() +
geom_col()
ggplot(employment_plot, aes(x = as.numeric(Year), y = Value/1000000, group = `Working Pattern`, colour = `Working Pattern`)) +
geom_line() +
geom_point() +
geom_col() +
facet_grid(Gender~., labeller = as_labeller(c(Female = 'Women', Male = 'Men'))) +
theme_bw() +
labs(x = "Year 2004 - 2019", y = "Count in Millions") +
theme(axis.title.x = element_text(size = 12, colour = 'magenta'),
axis.title.y = element_text(size = 16, colour = 'blue'),
legend.position = 'top')
ggplot(employment_plot, aes(x = as.numeric(Year), y = Value/1000000, group = `Working Pattern`, colour = `Working Pattern`)) +
geom_col() +
geom_line() +
geom_point() +
facet_grid(Gender~., labeller = as_labeller(c(Female = 'Women', Male = 'Men'))) +
theme_bw() +
labs(x = "Year 2004 - 2019", y = "Count in Millions") +
theme(axis.title.x = element_text(size = 12, colour = 'magenta'),
axis.title.y = element_text(size = 16, colour = 'blue'),
legend.position = 'top')
employment_plot <- employment_mutate_cases %>%
filter(tolower(Gender) %in% gender_cat) %>%
group_by(Year, Gender, `Working Pattern`) %>%
summarise(Value = sum(Value),
married_percentage = mean(married_percentage),
carrots_eaten = sum(Carrots_eaten))%>%
ungroup()
ggplot(employment_plot, aes(x = as.numeric(Year), y = Value/1000000, group = `Working Pattern`, colour = `Working Pattern`)) +
geom_col(aes(x = carrots_eaten, y = Value/1000000, group = `Working Pattern`, colour = `Working Pattern`)) +
geom_line() +
geom_point() +
facet_grid(Gender~., labeller = as_labeller(c(Female = 'Women', Male = 'Men'))) +
theme_bw() +
labs(x = "Year 2004 - 2019", y = "Count in Millions") +
theme(axis.title.x = element_text(size = 12, colour = 'magenta'),
axis.title.y = element_text(size = 16, colour = 'blue'),
legend.position = 'top')
ggplot(employment_plot, aes(x = as.numeric(Year), y = Value/1000000, group = `Working Pattern`, colour = `Working Pattern`)) +
geom_col(aes(y = carrots_eaten, x = as.numeric(Year) , group = `Working Pattern`, colour = `Working Pattern`)) +
geom_line() +
geom_point() +
facet_grid(Gender~., labeller = as_labeller(c(Female = 'Women', Male = 'Men'))) +
theme_bw() +
labs(x = "Year 2004 - 2019", y = "Count in Millions") +
theme(axis.title.x = element_text(size = 12, colour = 'magenta'),
axis.title.y = element_text(size = 16, colour = 'blue'),
legend.position = 'top')
ggplot(employment_plot, aes(x = as.numeric(Year), y = Value/1000000, group = `Working Pattern`, colour = `Working Pattern`)) +
geom_col(aes(y = carrots_eaten/1000000, x = as.numeric(Year) , group = `Working Pattern`, colour = `Working Pattern`)) +
geom_line() +
geom_point() +
facet_grid(Gender~., labeller = as_labeller(c(Female = 'Women', Male = 'Men'))) +
theme_bw() +
labs(x = "Year 2004 - 2019", y = "Count in Millions") +
theme(axis.title.x = element_text(size = 12, colour = 'magenta'),
axis.title.y = element_text(size = 16, colour = 'blue'),
legend.position = 'top')
ggplot(employment_plot, aes(x = as.numeric(Year), y = Value/1000000, group = `Working Pattern`, colour = `Working Pattern`)) +
geom_col(aes(y = carrots_eaten/1000000, x = as.numeric(Year) , group = `Working Pattern`, fill = `Working Pattern`)) +
geom_line() +
geom_point() +
facet_grid(Gender~., labeller = as_labeller(c(Female = 'Women', Male = 'Men'))) +
theme_bw() +
labs(x = "Year 2004 - 2019", y = "Count in Millions") +
theme(axis.title.x = element_text(size = 12, colour = 'magenta'),
axis.title.y = element_text(size = 16, colour = 'blue'),
legend.position = 'top')
ggplot(employment_plot, aes(x = as.numeric(Year), y = Value/1000000, group = `Working Pattern`, colour = `Working Pattern`)) +
geom_col(aes(y = carrots_eaten/100000, x = as.numeric(Year) , group = `Working Pattern`, fill = `Working Pattern`)) +
geom_line() +
geom_point() +
facet_grid(Gender~., labeller = as_labeller(c(Female = 'Women', Male = 'Men'))) +
theme_bw() +
labs(x = "Year 2004 - 2019", y = "Count in Millions") +
theme(axis.title.x = element_text(size = 12, colour = 'magenta'),
axis.title.y = element_text(size = 16, colour = 'blue'),
legend.position = 'top')
ggplot(employment_plot, aes(x = as.numeric(Year), y = Value/1000000, group = `Working Pattern`, colour = `Working Pattern`)) +
geom_col(aes(y = carrots_eaten/100000, x = as.numeric(Year) , group = `Working Pattern`, fill = `Working Pattern`)) +
scale_fill_manual(values = c("#999999", "#E69F00"))+
geom_line() +
geom_point() +
facet_grid(Gender~., labeller = as_labeller(c(Female = 'Women', Male = 'Men'))) +
theme_bw() +
labs(x = "Year 2004 - 2019", y = "Count in Millions") +
theme(axis.title.x = element_text(size = 12, colour = 'magenta'),
axis.title.y = element_text(size = 16, colour = 'blue'),
legend.position = 'top')
ggplot(employment_plot, aes(x = as.numeric(Year), y = Value/1000000, group = `Working Pattern`, colour = `Working Pattern`)) +
geom_col(aes(y = carrots_eaten/100000, x = as.numeric(Year) , group = `Working Pattern`, fill = `Working Pattern`)) +
scale_fill_manual(values = c("F0E442", "F69F00"))+
geom_line() +
geom_point() +
facet_grid(Gender~., labeller = as_labeller(c(Female = 'Women', Male = 'Men'))) +
theme_bw() +
labs(x = "Year 2004 - 2019", y = "Count in Millions") +
theme(axis.title.x = element_text(size = 12, colour = 'magenta'),
axis.title.y = element_text(size = 16, colour = 'blue'),
legend.position = 'top')
ggplot(employment_plot, aes(x = as.numeric(Year), y = Value/1000000, group = `Working Pattern`, colour = `Working Pattern`)) +
geom_col(aes(y = carrots_eaten/100000, x = as.numeric(Year) , group = `Working Pattern`, fill = `Working Pattern`)) +
scale_fill_manual(values = c("#F0E442", "#F69F00"))+
geom_line() +
geom_point() +
facet_grid(Gender~., labeller = as_labeller(c(Female = 'Women', Male = 'Men'))) +
theme_bw() +
labs(x = "Year 2004 - 2019", y = "Count in Millions") +
theme(axis.title.x = element_text(size = 12, colour = 'magenta'),
axis.title.y = element_text(size = 16, colour = 'blue'),
legend.position = 'top')
ggplot(employment_plot, aes(x = as.numeric(Year), y = Value/1000000, group = `Working Pattern`, colour = `Working Pattern`)) +
geom_col(aes(y = carrots_eaten/100000, x = as.numeric(Year) , group = `Working Pattern`, fill = `Working Pattern`)) +
scale_fill_manual(values = c("#0072B2", "#F69F00"))+
geom_line() +
geom_point() +
facet_grid(Gender~., labeller = as_labeller(c(Female = 'Women', Male = 'Men'))) +
theme_bw() +
labs(x = "Year 2004 - 2019", y = "Count in Millions") +
theme(axis.title.x = element_text(size = 12, colour = 'magenta'),
axis.title.y = element_text(size = 16, colour = 'blue'),
legend.position = 'top')
ggplot(employment_plot, aes(x = as.numeric(Year), y = Value/100000, group = `Working Pattern`, colour = `Working Pattern`)) +
geom_col(aes(y = carrots_eaten/100000, x = as.numeric(Year) , group = `Working Pattern`, fill = `Working Pattern`)) +
scale_fill_manual(values = c("#0072B2", "#F69F00"))+
geom_line() +
geom_point() +
facet_grid(Gender~., labeller = as_labeller(c(Female = 'Women', Male = 'Men'))) +
theme_bw() +
labs(x = "Year 2004 - 2019", y = "Count in Millions") +
theme(axis.title.x = element_text(size = 12, colour = 'magenta'),
axis.title.y = element_text(size = 16, colour = 'blue'),
legend.position = 'top')
ggplot(employment_plot, aes(x = as.numeric(Year), y = Value/1000000, group = `Working Pattern`, colour = `Working Pattern`)) +
geom_col(aes(y = carrots_eaten/1000000, x = as.numeric(Year) , group = `Working Pattern`, fill = `Working Pattern`)) +
scale_fill_manual(values = c("#0072B2", "#F69F00"))+
geom_line() +
geom_point() +
facet_grid(Gender~., labeller = as_labeller(c(Female = 'Women', Male = 'Men'))) +
theme_bw() +
labs(x = "Year 2004 - 2019", y = "Count in Millions") +
theme(axis.title.x = element_text(size = 12, colour = 'magenta'),
axis.title.y = element_text(size = 16, colour = 'blue'),
legend.position = 'top')
ggplot(employment_plot, aes(x = as.numeric(Year), y = Value/1000000, group = `Working Pattern`, colour = `Working Pattern`)) +
geom_col(aes(y = carrots_eaten/100000, x = as.numeric(Year) , group = `Working Pattern`, fill = `Working Pattern`)) +
scale_fill_manual(values = c("#0072B2", "#F69F00"))+
geom_line() +
geom_point() +
facet_grid(Gender~., labeller = as_labeller(c(Female = 'Women', Male = 'Men'))) +
theme_bw() +
labs(x = "Year 2004 - 2019", y = "Count in Millions") +
theme(axis.title.x = element_text(size = 12, colour = 'magenta'),
axis.title.y = element_text(size = 16, colour = 'blue'),
legend.position = 'top')
